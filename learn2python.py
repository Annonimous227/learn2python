import os
null=""
from Tkinter import *
import Tkinter
from time import sleep
root= Tk()
def gettext1():
    global condition
    inp=textinp.get("1.0",  END)
    f=open(":tempfile0897.py","w")
    f.write(inp)
    f.close()
    f=open(":tempfile0897.py","r")
    read=f.read()
    try:
        execfile(":tempfile0897.py")
        if "print (x)" in read or "print(x)"in read:
            rooterror= Tk()
            text= Text(rooterror)
            text.insert("1.0","Nicely done! Continue onto the next level!")
            text.config(state= DISABLED, font="Ariel 20")
            text.pack()
            rooterror.mainloop()
        else:
            rooterror= Tk()
            text= Text(rooterror)
            text.insert("1.0","Hmmm, it seems that print (x) isn't in your code. Check to see what's wrong.")
            text.config(state= DISABLED, font="Ariel 20")
            text.pack()
            rooterror.mainloop()
    except:
        rooterror= Tk()
        text= Text(rooterror)
        text.insert("1.0","Uh oh! Looks like there was an error in your program. Look back and check your code.")
        text.config(state= DISABLED, font="Ariel 20")
        text.pack()
        rooterror.mainloop()
    os.remove(':tempfile0897.py')
def gettext2():
    global condition
    inp=textinp.get("1.0",  END)
    f=open(":tempfile0897.py","w")
    f.write(inp)
    f.close()
    f=open(":tempfile0897.py","r")
    read=f.read()
    try:
        execfile(":tempfile0897.py")
        if "if" in read and "else"in read:
            rooterror= Tk()
            text= Text(rooterror)
            text.insert("1.0","Nicely done! Continue onto the next level!")
            text.config(state= DISABLED, font="Ariel 20")
            text.pack()
            rooterror.mainloop()
        else:
            rooterror= Tk()
            text= Text(rooterror)
            text.insert("1.0","Hmmm, it seems that if and else aren't in your code. Check to see what's wrong.")
            text.config(state= DISABLED, font="Ariel 20")
            text.pack()
            rooterror.mainloop()
    except:
        rooterror= Tk()
        text= Text(rooterror)
        text.insert("1.0","Uh oh! Looks like there was an error in your program. Look back and check your code.")
        text.config(state= DISABLED, font="Ariel 20")
        text.pack()
        rooterror.mainloop()
    os.remove(':tempfile0897.py')
def gettext3():
    global condition
    inp=textinp.get("1.0",  END)
    f=open(":tempfile0897.py","w")
    f.write(inp)
    f.close()
    f=open(":tempfile0897.py","r")
    read=f.read()
    try:
        execfile(":tempfile0897.py")
        if "def" in read and "return"in read and "(" in read and ")" in read:
            rooterror= Tk()
            text= Text(rooterror)
            text.insert("1.0","Nicely done! Continue onto the next level!")
            text.config(state= DISABLED, font="Ariel 20")
            text.pack()
            rooterror.mainloop()
        else:
            rooterror= Tk()
            text= Text(rooterror)
            text.insert("1.0","Hmmm, it seems that if and else aren't in your code. Check to see what's wrong.")
            text.config(state= DISABLED, font="Ariel 20")
            text.pack()
            rooterror.mainloop()
    except:
        rooterror= Tk()
        text= Text(rooterror)
        text.insert("1.0","Uh oh! Looks like there was an error in your program. Look back and check your code.")
        text.config(state= DISABLED, font="Ariel 20")
        text.pack()
        rooterror.mainloop()
    os.remove(':tempfile0897.py')
def lesson1():
    global root
    global root1
    root1.destroy()
    root.destroy()
    root= Tk()
    root.resizable(0,0)
    framebig= Frame(root)
    framebig.pack(side= TOP)
    framelittle= Frame(root)
    framelittle.pack(side= TOP)
    framelab= Frame(framebig)
    framelab.pack(side= TOP)
    frameobj= Frame(framebig)
    frameobj.pack(side= LEFT)
    frameinp= Frame(framebig)
    frameinp.pack(side= LEFT)
    framelabobj= Frame(framelab)
    framelabobj.pack(side= LEFT)
    framelabinp= Frame(framelab)
    framelabinp.pack(side= LEFT)
    framebut= Frame(framelittle)
    framebut.pack(side= BOTTOM)
    framebutobj= Frame(framebut)
    framebutobj.grid(row=1, column=1)
    framebutinp= Frame(framebut)
    framebutinp.grid(row=1, column=2)
    framebutinp.config(highlightbackground='black')
    text= Text(framelabobj, height=1)
    framebutobj.config(highlightbackground='black')
    text.insert("1.0","Objectives:")
    text.config(highlightbackground='black', state= DISABLED)
    text.pack(side= LEFT)
    textobj= Text(frameobj)
    textobj.insert("1.0", "First off, welcome to learn2python!\nLet's start off with learning some terminology:\nSyntax: The actual code. It's similar to syntax in language.\nCommands: Commands are what you tell Python to do, like print or del.\nError: When python tells you that there's a problem in your code.\nConsole: The console is where you, by default, execute the program. \n(To view the console, launch IDLE.)\nDebugging: when you go through your code to figure out whats wrong with it.\n\n\nClick the 'next lesson' button to continue to the Lesson 2.")
    textobj.config(highlightbackground='black', state= DISABLED)
    textobj.pack(side= BOTTOM)
    textlab= Text(framelabinp, height=1)
    textlab.insert("1.0","Type your code below!")
    textlab.config(highlightbackground='black', state= DISABLED)
    textlab.pack(side= RIGHT)
    textinp= Text(frameinp)
    textinp.insert("1.0","CODEHERE")
    textinp.config(highlightbackground='black')
    textinp.pack(side= LEFT)
    b= Button(framebutinp, text="Submit")
    b.pack(side= LEFT)
    b= Button(framebutobj, text="Lesson list", command=levellist)
    b.pack(side= LEFT)
    text= Text(framebutobj, height=1, state= DISABLED)
    text.pack(side= LEFT)
    root.mainloop()
def lesson2():
    global root
    global root1
    root1.destroy()
    root.destroy()
    root= Tk()
    root.resizable(0,0)
    framebig= Frame(root)
    framebig.pack(side= TOP)
    framelittle= Frame(root)
    framelittle.pack(side= TOP)
    framelab= Frame(framebig)
    framelab.pack(side= TOP)
    frameobj= Frame(framebig)
    frameobj.pack(side= LEFT)
    frameinp= Frame(framebig)
    frameinp.pack(side= LEFT)
    framelabobj= Frame(framelab)
    framelabobj.pack(side= LEFT)
    framelabinp= Frame(framelab)
    framelabinp.pack(side= LEFT)
    framebut= Frame(framelittle)
    framebut.pack(side= BOTTOM)
    framebutobj= Frame(framebut)
    framebutobj.grid(row=1, column=1)
    framebutinp= Frame(framebut)
    framebutinp.grid(row=1, column=2)
    framebutinp.config(highlightbackground='black')
    text= Text(framelabobj, height=1)
    framebutobj.config(highlightbackground='black')
    text.insert("1.0","Objectives:")
    text.config(highlightbackground='black', state= DISABLED)
    text.pack(side= LEFT)
    textobj= Text(frameobj)
    textobj.insert("1.0", "Some more terminology:\nStrings: Strings are a group of characters. \nExamples:\n'Hello Bob' is a string.\nVariables: A variables is when you assign a letter, number, etc. to store a \nvalue. \n Examples of variables:\nNumber: x=24 (Here, x is defined as being 24. I can later use x in my code and it will run, using x as 24)\nStrings:x='hello bob'. In my code, when I type x, it will treat it as if I typed 'hello bob'.\n\n\nClick the 'next lesson' button to continue to the next lesson.")
    textobj.config(highlightbackground='black', state= DISABLED)
    textobj.pack(side= BOTTOM)
    textlab= Text(framelabinp, height=1)
    textlab.insert("1.0","Type your code below!")
    textlab.config(highlightbackground='black', state= DISABLED)
    textlab.pack(side= RIGHT)
    textinp= Text(frameinp)
    textinp.insert("1.0","CODEHERE")
    textinp.config(highlightbackground='black')
    textinp.pack(side= LEFT)
    b= Button(framebutinp, text="Submit")
    b.pack(side= LEFT)
    b= Button(framebutobj, text="Lesson list", command=levellist)
    b.pack(side= LEFT)
    text= Text(framebutobj, height=1, state= DISABLED)
    text.pack(side= LEFT)
    root.mainloop()
def lesson3():
    global root
    global root1
    global textinp
    root1.destroy()
    root.destroy()
    root= Tk()
    root.resizable(0,0)
    framebig= Frame(root)
    framebig.pack(side= TOP)
    framelittle= Frame(root)
    framelittle.pack(side= TOP)
    framelab= Frame(framebig)
    framelab.pack(side= TOP)
    frameobj= Frame(framebig)
    frameobj.pack(side= LEFT)
    frameinp= Frame(framebig)
    frameinp.pack(side= LEFT)
    framelabobj= Frame(framelab)
    framelabobj.pack(side= LEFT)
    framelabinp= Frame(framelab)
    framelabinp.pack(side= LEFT)
    framebut= Frame(framelittle)
    framebut.pack(side= BOTTOM)
    framebutobj= Frame(framebut)
    framebutobj.grid(row=1, column=1)
    framebutinp= Frame(framebut)
    framebutinp.grid(row=1, column=2)
    framebutinp.config(highlightbackground='black')
    text= Text(framelabobj, height=1)
    framebutobj.config(highlightbackground='black')
    text.insert("1.0","Objectives:")
    text.config(highlightbackground='black', state= DISABLED)
    text.pack(side= LEFT)
    textobj= Text(frameobj)
    textobj.insert("1.0", "Now, lets learn our first command!\nPrint: The print command is used to tell your computer to show some text on the screen. For example:\nprint ('Hello World')\n\nThe above code, when executed, would return Hello World.\nPay close attention to the syntax! Since Python 3.x, you need to remember the parenthesis.\nAlso: Unless you're printing a variable, dont forget the quotation marks or single quotes.\n\nAssignment 1:\n1. In the box on the left, define a variable x.\n2. Write code that tells your computer to print x\n3. Press the Submit button at the bottom of the window.\n\n\nGood luck!")
    textobj.config(highlightbackground='black', state= DISABLED)
    textobj.pack(side= BOTTOM)
    textlab= Text(framelabinp, height=1)
    textlab.insert("1.0","Type your code below!")
    textlab.config(highlightbackground='black', state= DISABLED)
    textlab.pack(side= RIGHT)
    textinp= Text(frameinp)
    textinp.insert("1.0","CODEHERE")
    textinp.config(highlightbackground='black')
    textinp.pack(side= LEFT)
    b= Button(framebutinp, text="Submit", command=gettext1)
    b.pack(side= LEFT)
    b= Button(framebutobj, text="Lesson list", command=levellist)
    b.pack(side= LEFT)
    text= Text(framebutobj, height=1, state= DISABLED)
    text.pack(side= LEFT)
    root.mainloop()
def quiz1():
    global incorrect
    global correct
    global root
    correct=""
    incorrect=0
    def correct():
        global root
        root.destroy()
        root2= Tk()
        grade=100-(incorrect*10)
        text= Text(root2)
        coolio=str("Correct! Your grade is "+str(grade))
        text.insert("1.0",coolio)
        text.pack()
        root2.mainloop()
    def wrong():
        global incorrect
        global root6
        root6= Tk()
        root6.geometry("500x50")
        incorrect=incorrect+1
        text= Text(root6)
        text.insert("1.0","Incorrect")
        text.pack()
        root6.mainloop()
    root= Tk()
    frame1= Frame(root)
    frame1.pack(side= TOP)
    text= Text(frame1)
    text.insert("1.0","1. Which of the following will return 'I like to code'?")
    text.config(state= DISABLED)
    text.pack(side= TOP)
    b= Button(frame1, text="say I like to code", command=wrong)
    b.pack(side= TOP)
    b= Button(frame1, text="console.log(I like to code)", command=wrong)
    b.pack(side= TOP)
    b= Button(frame1, text="text_create('I like to code')", command=wrong)
    b.pack(side= TOP)
    b= Button(frame1, text="print ('I like to code')", command=correct)
    b.pack(side= TOP)
    root.mainloop()
def lesson4():
    global root
    global root1
    global textinp
    root1.destroy()
    root.destroy()
    root= Tk()
    root.resizable(0,0)
    framebig= Frame(root)
    framebig.pack(side= TOP)
    framelittle= Frame(root)
    framelittle.pack(side= TOP)
    framelab= Frame(framebig)
    framelab.pack(side= TOP)
    frameobj= Frame(framebig)
    frameobj.pack(side= LEFT)
    frameinp= Frame(framebig)
    frameinp.pack(side= LEFT)
    framelabobj= Frame(framelab)
    framelabobj.pack(side= LEFT)
    framelabinp= Frame(framelab)
    framelabinp.pack(side= LEFT)
    framebut= Frame(framelittle)
    framebut.pack(side= BOTTOM)
    framebutobj= Frame(framebut)
    framebutobj.grid(row=1, column=1)
    framebutinp= Frame(framebut)
    framebutinp.grid(row=1, column=2)
    framebutinp.config(highlightbackground='black')
    text= Text(framelabobj, height=1)
    framebutobj.config(highlightbackground='black')
    text.insert("1.0","Objectives:")
    text.config(highlightbackground='black', state= DISABLED)
    text.pack(side= LEFT)
    textobj= Text(frameobj)
    textobj.insert("1.0", "If/Else statments:\nSay you made a robot to do stuff for you. That's great and all, but what happens when the robot has to choose something?\nSay you send your robot to buy groceries. You tell it 'Cross the street, walk 5 blocks, and but 7 bannanas. \nIt does exactly that. As it gets ready to cross the street, a car zooms along at 120 mph. The robot, following your instructions, calmly walks right in front of the car.\nWell, we see that wont work. To make effective programs, we need to make the computer do different things depending on the situation.\nThe syntax looks like this:\nif oldlady='help':\n    print ('Sure, I'll help you')\n\nWe have a variable we defined earlier in the code as oldlady. The program asks,'What is the variable oldlady?' It looks at the previous code and sees that oldlady='help'. Then, it follows through with your code. Remember the indent!\nElif works the same way (it's just adding an extra option to your 'if' statement)\nExample:\nif oldlady=='help':\n    print 'Sure I'll help you'\nelif oldlady=='who are you':\n    print 'I am the Terminator'\nelse:\n    print 'Yay'\n\n\nAssignment 2: If and Else\n\n\nMake a program which assigns a variable. Then, use an if and an else statment to tell python to choose between two options. ")
    textobj.config(highlightbackground='black', state= DISABLED)
    textobj.pack(side= BOTTOM)
    textlab= Text(framelabinp, height=1)
    textlab.insert("1.0","Type your code below!")
    textlab.config(highlightbackground='black', state= DISABLED)
    textlab.pack(side= RIGHT)
    textinp= Text(frameinp)
    textinp.insert("1.0","CODEHERE")
    textinp.config(highlightbackground='black')
    textinp.pack(side= LEFT)
    b= Button(framebutinp, text="Submit", command=gettext2)
    b.pack(side= LEFT)
    b= Button(framebutobj, text="Lesson list", command=levellist)
    b.pack(side= LEFT)
    text= Text(framebutobj, height=1, state= DISABLED)
    text.pack(side= LEFT)
    root.mainloop()
def lesson5():
    global root
    global root1
    global textinp
    root1.destroy()
    root.destroy()
    root= Tk()
    root.resizable(0,0)
    framebig= Frame(root)
    framebig.pack(side= TOP)
    framelittle= Frame(root)
    framelittle.pack(side= TOP)
    framelab= Frame(framebig)
    framelab.pack(side= TOP)
    frameobj= Frame(framebig)
    frameobj.pack(side= LEFT)
    frameinp= Frame(framebig)
    frameinp.pack(side= LEFT)
    framelabobj= Frame(framelab)
    framelabobj.pack(side= LEFT)
    framelabinp= Frame(framelab)
    framelabinp.pack(side= LEFT)
    framebut= Frame(framelittle)
    framebut.pack(side= BOTTOM)
    framebutobj= Frame(framebut)
    framebutobj.grid(row=1, column=1)
    framebutinp= Frame(framebut)
    framebutinp.grid(row=1, column=2)
    framebutinp.config(highlightbackground='black')
    text= Text(framelabobj, height=1)
    framebutobj.config(highlightbackground='black')
    text.insert("1.0","Objectives:")
    text.config(highlightbackground='black', state= DISABLED)
    text.pack(side= LEFT)
    textobj= Text(frameobj)
    textobj.insert("1.0", "Functions:\n\nFunctions are when you define a new command. For example, let's look at our robot example. You can define a command, get groceries, and tell it what it needs to do. Functions are usefull when you end up writing the same bit of code over and over again. \nExample:\ndef function():\n    print 'yay'\nSometimes, functions have options called arguements. \nExample:\ndef addfive(x):\n    print x+5\nWhen using functions, sometimes you want to use the return command. \nExample:\ndef add5(x):\n    return x+5\n\n\nAssignment 3: \n\nAssign a variable. Then, use a function to return the variable. Then, run the function")
    textobj.config(highlightbackground='black', state= DISABLED)
    textobj.pack(side= BOTTOM)
    textlab= Text(framelabinp, height=1)
    textlab.insert("1.0","Type your code below!")
    textlab.config(highlightbackground='black', state= DISABLED)
    textlab.pack(side= RIGHT)
    textinp= Text(frameinp)
    textinp.insert("1.0","CODEHERE")
    textinp.config(highlightbackground='black')
    textinp.pack(side= LEFT)
    b= Button(framebutinp, text="Submit", command=gettext3)
    b.pack(side= LEFT)
    b= Button(framebutobj, text="Lesson list", command=levellist)
    b.pack(side= LEFT)
    text= Text(framebutobj, height=1, state= DISABLED)
    text.pack(side= LEFT)
    root.mainloop()
def quiz2():
    global incorrect
    global correct
    global root
    incorrect=0
    def correct():
        global root
        root.destroy()
        root2= Tk()
        grade=100-(incorrect*10)
        text= Text(root2)
        coolio=str("Correct! Your grade is "+str(grade))
        text.insert("1.0",coolio)
        text.config(state=DISABLED)
        text.pack()
        root2.mainloop()
    def correct2():
        root= Tk()
        frame1= Frame(root)
        frame1.pack(side= TOP)
        text= Text(frame1)
        text.insert("1.0","How do you define a function?")
        text.config(state= DISABLED)
        text.pack(side= TOP)
        b= Button(frame1, text="define function(name(parameters))", command=wrong)
        b.pack(side= TOP)
        b= Button(frame1, text="deffunc [name(parameters)]", command=wrong)
        b.pack(side= TOP)
        b= Button(frame1, text="def name(parameters)", command=correct)
        b.pack(side= TOP)
        b= Button(frame1, text="function.def(name(parameters))", command=wrong)
        b.pack(side= TOP)
        root.mainloop()
    def wrong():
        global incorrect
        global root6
        root6= Tk()
        root6.geometry("500x50")
        incorrect=incorrect+1
        text= Text(root6)
        text.insert("1.0","Incorrect")
        text.pack()
        root6.mainloop()
    root= Tk()
    frame1= Frame(root)
    frame1.pack(side= TOP)
    text= Text(frame1)
    text.insert("1.0","What is an If statment?")
    text.config(state= DISABLED)
    text.pack(side= TOP)
    b= Button(frame1, text="A way for your computer to execute code.", command=wrong)
    b.pack(side= TOP)
    b= Button(frame1, text="A module for string manipulation.", command=wrong)
    b.pack(side= TOP)
    b= Button(frame1, text="A command", command=wrong)
    b.pack(side= TOP)
    b= Button(frame1, text="A way for your computer to make a descision depending on certain conditions.", command=correct2)
    b.pack(side= TOP)
    root.mainloop()
def lesson6():
    global root
    global root1
    global textinp
    root1.destroy()
    root.destroy()
    root= Tk()
    root.resizable(0,0)
    framebig= Frame(root)
    framebig.pack(side= TOP)
    framelittle= Frame(root)
    framelittle.pack(side= TOP)
    framelab= Frame(framebig)
    framelab.pack(side= TOP)
    frameobj= Frame(framebig)
    frameobj.pack(side= LEFT)
    frameinp= Frame(framebig)
    frameinp.pack(side= LEFT)
    framelabobj= Frame(framelab)
    framelabobj.pack(side= LEFT)
    framelabinp= Frame(framelab)
    framelabinp.pack(side= LEFT)
    framebut= Frame(framelittle)
    framebut.pack(side= BOTTOM)
    framebutobj= Frame(framebut)
    framebutobj.grid(row=1, column=1)
    framebutinp= Frame(framebut)
    framebutinp.grid(row=1, column=2)
    framebutinp.config(highlightbackground='black')
    text= Text(framelabobj, height=1)
    framebutobj.config(highlightbackground='black')
    text.insert("1.0","Objectives:")
    text.config(highlightbackground='black', state= DISABLED)
    text.pack(side= LEFT)
    textobj= Text(frameobj)
    textobj.insert("1.0", "Hope you did well on that test!\nLet's move on to another crucial aspect of python: user interaction.\nYour program can be all good and fine, but without user interaction, it ain't worth a dime. \nRaw input: \nThis is a how you ask a user something in the console. \nThe syntax looks like this:\nx=raw_input('Whats your name?')\nThis code will print 'Whats your name? to the console and leave a space right next to it for the user to input something. Then it saves the input as a variable. Now remember, the input is saved, by default, as a string, so if you want to add it to something, you'll need to convert it to a floating point number, like this: float(x).\n\n\nAssignment:")
    textobj.config(highlightbackground='black', state= DISABLED)
    textobj.pack(side= BOTTOM)
    textlab= Text(framelabinp, height=1)
    textlab.insert("1.0","Type your code below!")
    textlab.config(highlightbackground='black', state= DISABLED)
    textlab.pack(side= RIGHT)
    textinp= Text(frameinp)
    textinp.insert("1.0","CODEHERE")
    textinp.config(highlightbackground='black')
    textinp.pack(side= LEFT)
    b= Button(framebutinp, text="Submit", command=gettext3)
    b.pack(side= LEFT)
    b= Button(framebutobj, text="Lesson list", command=levellist)
    b.pack(side= LEFT)
    text= Text(framebutobj, height=1, state= DISABLED)
    text.pack(side= LEFT)
    root.mainloop()
def levellist():
    global root1
    root1= Tk()
    root1.resizable(0,0)
    root1.title('Select a Lesson')
    frame1= Frame(root1)
    frame1.pack(side= LEFT)
    frame2= Frame(root1)
    frame2.pack(side= LEFT)
    b= Button(frame1, text="Lesson 1 ", command=lesson1, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text="Lesson 2", command=lesson2, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text="Lesson 3", command=lesson3, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text=" Quiz 1    ", command=quiz1, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text="Lesson 4", command=lesson4, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text="Lesson 5", command=lesson5, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text="Quiz 2", command=quiz2, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    b= Button(frame1, text="Lesson 6", command=lesson6, width=6)
    b.config(highlightbackground='black', bd='0.5')
    b.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Learning basic terminology")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Variables, Strings, oh my!")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Print: Hello World!")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Quiz 1")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","If/Else statements")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Functions")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Quiz 2")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    text= Text(frame2, height=1)
    text.insert("1.0","Raw Input")
    text.config(font='Verdana 15', highlightbackground='black', bd='0.5', state= DISABLED, width=30)
    text.pack(side= TOP)
    root1.mainloop()
def object():
    root=Tk()
    root.resizable(0,0)
    text=Text(root)
    text.insert('1.0','Course objectives:\n\nOnce you have completed all the lessons within Learn2Python,\nyou should have a functional knowledge of Python, enough\nto get you through beginner programming competitions\nand help you on homework and such. Click the button below for a list of suggested projects.\nThe code for this program is and always will be open source, (link here).\nMake sure to update, as newer lessons will be available.\nWe are not affiliated with CodeAcademy, or any other code learning source.')
    text.config(state=DISABLED, font='{Times New Roman} 14', height=9)
    text.pack()
root.resizable(0,0)
root.title('Learn2Python')
framtop=Frame(root)
framtop.pack(side=TOP)
framtopleft=Frame(framtop)
framtopleft.pack(side=LEFT)
framtopmid=Frame(framtop)
framtopmid.pack(side=LEFT)
framtopright=Frame(framtop)
framtopright.pack(side=LEFT)
frammid=Frame(root)
frammid.pack(side=TOP)
logo=''
image=Tkinter.PhotoImage(data=logo)
label = Tkinter.Label(framtopright, image=image).pack()
label2 = Tkinter.Label(framtopleft, image=image).pack()
t=Text(framtopmid)
t.insert('1.0', 'Welcome to Learn2Python')
t.config(height=1, width=25, state=DISABLED)
t.pack()
b=Button(frammid, text='Lesson List', command=levellist)
b.pack(side=LEFT)
b=Button(frammid, text='Course Objectives', command=object)
b.pack(side=LEFT)
root.mainloop()